train:
  runner: "trainingPipelineRunner" # "multipleTrainingPipelineRunner", "trainingPipelineRunner"

  algorithm: "randomForest"
  # "decisionTree", "randomForest", "adaBoost", "gradientBoosting", "logisticRegression", "deepLearningClassifier"

  multipleAlgorithms: ["decisionTree", "randomForest", "adaBoost"]

  decisionTree:
    splitRule: GINI
    maxDepth: 20
    maxNodes: 0
    nodeSize: 5

  decisionTreeGridSearch:
    splitRule: [GINI, ENTROPY]
    maxDepth: [10, 20]
    maxNodes: [0, 10]
    nodeSize: [5, 10]

  randomForest:
    nTrees: 500
    mtry: 0
    splitRule: GINI
    maxDepth: 20
    maxNodes: 500
    nodeSize: 1
    subsample: 1.0
    classWeight: null
    seeds: null

  adaBoost:
    nTrees: 500
    maxDepth: 50
    maxNodes: 10
    nodeSize: 2

  gradientBoosting:
    nTrees: 500
    maxDepth: 20
    maxNodes: 6
    nodeSize: 1
    shrinkage: 0.05
    subsample: 0.7

  logisticRegression:
    lambda: 0.0
    tol: 1E-5
    maxIter: 500

  deepLearningClassifier:
    kernelInitializerSeed: 12
    epochs: 50
    trainBatchSize: 32
    testBatchSize: 32

preProcessing:
  seed: 42
  testSize: 0.2

preProcessingDL:
  trainSize: 0.8
